#!/bin/bash

TOKEN_ADDRESSES="0xCd5805d60Bbf9Afe69a394c2BDa10F6Dae2c39AF"
SMART_WALLET_DEPLOY_VERIFIER_ADDRESS="0x5159345aaB821172e795d56274D0f5FDFdC6aBD9"
SMART_WALLET_RELAY_VERIFIER_ADDRESS="0x7557fcE0BbFAe81a9508FF469D481f2c72a8B5f3"
CUSTOM_SMART_WALLET_DEPLOY_VERIFIER_ADDRESS="0x1Af2844A588759D0DE58abD568ADD96BB8B3B6D8"
CUSTOM_SMART_WALLET_RELAY_VERIFIER_ADDRESS="0x726ECC75d5D51356AA4d0a5B648790cC345985ED"
NETWORK=33
RSK_HOST="localhost"
RSK_PORT=4444

TRUFFLE_CONFIG="module.exports = {  networks: { development: { host: '${RSK_HOST}', port: ${RSK_PORT}, network_id: '${NETWORK}' } } };"

echo "${TRUFFLE_CONFIG}" > truffle-config.js

cat > allowTokens.js << EOF
module.exports = async function(callback) {
  const smartWalletDeployVerifierAbi = require("../src/cli/compiled/DeployVerifier.json").abi;
  const customSmartWalletDeployVerifierAbi = require("../src/cli/compiled/CustomSmartWalletDeployVerifier.json").abi;
  const relayVerifierAbi = require("../src/cli/compiled/RelayVerifier.json").abi;

  const smartWalletDeployVerifier = await new web3.eth.Contract(smartWalletDeployVerifierAbi, "${SMART_WALLET_DEPLOY_VERIFIER_ADDRESS}");
  const smartWalletRelayVerifier = await new web3.eth.Contract(relayVerifierAbi, "${SMART_WALLET_RELAY_VERIFIER_ADDRESS}");
  const customSmartWalletDeployVerifier = await new web3.eth.Contract(customSmartWalletDeployVerifierAbi, "${CUSTOM_SMART_WALLET_DEPLOY_VERIFIER_ADDRESS}");
  const customSmartWalletRelayVerifier = await new web3.eth.Contract(relayVerifierAbi, "${CUSTOM_SMART_WALLET_RELAY_VERIFIER_ADDRESS}");

  const tokenAddresses = '${TOKEN_ADDRESSES}'.split(',');

  const accounts = await web3.eth.getAccounts();

  for (let tokenAddress of tokenAddresses) {
    console.log("Adding token with address " + tokenAddress + " to allowed tokens on smart wallet deploy verifier");
    try {
      await smartWalletDeployVerifier.methods.acceptToken(tokenAddress).send({from: accounts[0]});
    } catch (error) {
      console.error(error);
    }
    console.log("Adding token with address " + tokenAddress + " to allowed tokens on smart wallet relay verifier");
    try {
      await smartWalletRelayVerifier.methods.acceptToken(tokenAddress).send({from: accounts[0]});
    } catch (error) {
      console.error(error);
    }
    console.log("Adding token with address " + tokenAddress + " to allowed tokens on custom smart deploy verifier");
    try {
      await customSmartWalletDeployVerifier.methods.acceptToken(tokenAddress).send({from: accounts[0]});
    } catch (error) {
      console.error(error);
    }
    console.log("Adding token with address " + tokenAddress + " to allowed tokens on custom smart wallet relay verifier");
    try {
      await customSmartWalletRelayVerifier.methods.acceptToken(tokenAddress).send({from: accounts[0]});
    } catch (error) {
      console.error(error);
    }
  }
  console.log("Done!");
}
EOF

npx truffle exec allowTokens.js

rm allowTokens.js
rm truffle-config.js
